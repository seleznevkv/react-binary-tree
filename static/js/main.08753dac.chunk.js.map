{"version":3,"sources":["components/binary-node/binary-node.js","components/line/line.js","components/binary-tree/binary-tree.js","components/input-panel/input-panel.js","components/app/app.js","index.js"],"names":["BinaryNode","props","value","top","left","bgcolor","onChangeColor","styles","background","onClick","className","style","Line","nodes","x1","y1","x2","y2","stroke","BinaryTree","onDragStart","onDragOver","onDragDrop","elements","map","item","e","onDrop","draggable","id","height","width","length","nodesArr","InputPanel","onInput","useState","nodeNumber","setnodeNumber","text","settext","onSubmit","preventDefault","type","placeholder","onChange","isNaN","target","App","nodesArray","setnodesArray","currentNode","setCurrentNode","color","setcolor","infoTextShow","key","newArr","b","k","rightNode","i","y","push","updateColor","hex","index","findIndex","elem","node","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08753dac.chunk.js","sourcesContent":["import React from 'react'\r\nimport './binary-node.css'\r\n\r\nfunction BinaryNode(props) {\r\n\r\n    \r\n        const {value, top, left, bgcolor, onChangeColor} = props;\r\n\r\n        let styles = {\r\n            top: `${top}px`,\r\n            left: `${left}px`,\r\n            background: `${bgcolor}`\r\n        }\r\n\r\n        let classNames = \"node\";\r\n \r\n        return (\r\n            <div \r\n                onClick={onChangeColor} \r\n                className={classNames} \r\n                style={styles} \r\n            >\r\n                <span>{value}</span>\r\n            </div>\r\n        )    \r\n}\r\n\r\nexport default BinaryNode\r\n\r\n","import React from 'react'\r\n\r\nfunction Line(props) {\r\n    \r\n    const {nodes} = props;\r\n\r\n    switch (nodes) {\r\n        case 3:\r\n            \r\n            return (\r\n                <>\r\n                    <line x1=\"600\" y1=\"70\" x2=\"300\" y2=\"120\" stroke=\"black\"/>\r\n                    <line x1=\"600\" y1=\"70\" x2=\"900\" y2=\"120\" stroke=\"black\"/>   \r\n                </>\r\n             )\r\n        case 7:\r\n            return (\r\n                <>\r\n                    <line x1=\"600\" y1=\"70\" x2=\"300\" y2=\"120\" stroke=\"black\"/>\r\n                    <line x1=\"600\" y1=\"70\" x2=\"900\" y2=\"120\" stroke=\"black\"/>   \r\n\r\n                    <line x1=\"300\" y1=\"120\" x2=\"150\" y2=\"170\" stroke=\"black\"/>\r\n                    <line x1=\"300\" y1=\"120\" x2=\"450\" y2=\"170\" stroke=\"black\"/>   \r\n                    <line x1=\"900\" y1=\"120\" x2=\"750\" y2=\"170\" stroke=\"black\"/>\r\n                    <line x1=\"900\" y1=\"120\" x2=\"1050\" y2=\"170\" stroke=\"black\"/>  \r\n                </>\r\n             )\r\n        \r\n        case 15:\r\n            return (\r\n                <>\r\n                    <line x1=\"600\" y1=\"70\" x2=\"300\" y2=\"120\" stroke=\"black\"/>\r\n                    <line x1=\"600\" y1=\"70\" x2=\"900\" y2=\"120\" stroke=\"black\"/>   \r\n\r\n                    <line x1=\"300\" y1=\"120\" x2=\"150\" y2=\"170\" stroke=\"black\"/>\r\n                    <line x1=\"300\" y1=\"120\" x2=\"450\" y2=\"170\" stroke=\"black\"/>   \r\n                    <line x1=\"900\" y1=\"120\" x2=\"750\" y2=\"170\" stroke=\"black\"/>\r\n                    <line x1=\"900\" y1=\"120\" x2=\"1050\" y2=\"170\" stroke=\"black\"/> \r\n\r\n                    <line x1=\"150\" y1=\"170\" x2=\"75\" y2=\"220\" stroke=\"black\"/>\r\n                    <line x1=\"150\" y1=\"170\" x2=\"225\" y2=\"220\" stroke=\"black\"/>   \r\n                    <line x1=\"450\" y1=\"170\" x2=\"525\" y2=\"220\" stroke=\"black\"/>\r\n                    <line x1=\"450\" y1=\"170\" x2=\"375\" y2=\"220\" stroke=\"black\"/> \r\n                    \r\n                    <line x1=\"750\" y1=\"170\" x2=\"675\" y2=\"220\" stroke=\"black\"/>\r\n                    <line x1=\"750\" y1=\"170\" x2=\"825\" y2=\"220\" stroke=\"black\"/>   \r\n                    <line x1=\"1050\" y1=\"170\" x2=\"1125\" y2=\"220\" stroke=\"black\"/>\r\n                    <line x1=\"1050\" y1=\"170\" x2=\"975\" y2=\"220\" stroke=\"black\"/> \r\n\r\n\r\n                </>\r\n             )\r\n            \r\n        \r\n        case 31:\r\n            return (\r\n                <>\r\n                    <line x1=\"600\" y1=\"70\" x2=\"300\" y2=\"120\" stroke=\"black\"/>\r\n                    <line x1=\"600\" y1=\"70\" x2=\"900\" y2=\"120\" stroke=\"black\"/>   \r\n    \r\n                    <line x1=\"300\" y1=\"120\" x2=\"150\" y2=\"170\" stroke=\"black\"/>\r\n                    <line x1=\"300\" y1=\"120\" x2=\"450\" y2=\"170\" stroke=\"black\"/>   \r\n                    <line x1=\"900\" y1=\"120\" x2=\"750\" y2=\"170\" stroke=\"black\"/>\r\n                    <line x1=\"900\" y1=\"120\" x2=\"1050\" y2=\"170\" stroke=\"black\"/> \r\n    \r\n                    <line x1=\"150\" y1=\"170\" x2=\"75\" y2=\"220\" stroke=\"black\"/>\r\n                    <line x1=\"150\" y1=\"170\" x2=\"225\" y2=\"220\" stroke=\"black\"/>   \r\n                    <line x1=\"450\" y1=\"170\" x2=\"525\" y2=\"220\" stroke=\"black\"/>\r\n                    <line x1=\"450\" y1=\"170\" x2=\"375\" y2=\"220\" stroke=\"black\"/> \r\n                        \r\n                    <line x1=\"750\" y1=\"170\" x2=\"675\" y2=\"220\" stroke=\"black\"/>\r\n                    <line x1=\"750\" y1=\"170\" x2=\"825\" y2=\"220\" stroke=\"black\"/>   \r\n                    <line x1=\"1050\" y1=\"170\" x2=\"1125\" y2=\"220\" stroke=\"black\"/>\r\n                    <line x1=\"1050\" y1=\"170\" x2=\"975\" y2=\"220\" stroke=\"black\"/> \r\n\r\n                    <line x1=\"75\" y1=\"220\" x2=\"38\" y2=\"270\" stroke=\"black\"/>\r\n                    <line x1=\"75\" y1=\"220\" x2=\"113\" y2=\"270\" stroke=\"black\"/>\r\n\r\n                    <line x1=\"225\" y1=\"220\" x2=\"187\" y2=\"270\" stroke=\"black\"/>   \r\n                    <line x1=\"225\" y1=\"220\" x2=\"263\" y2=\"270\" stroke=\"black\"/>  \r\n\r\n                    <line x1=\"525\" y1=\"220\" x2=\"487\" y2=\"270\" stroke=\"black\"/> \r\n                    <line x1=\"525\" y1=\"220\" x2=\"563\" y2=\"270\" stroke=\"black\"/> \r\n\r\n                    <line x1=\"375\" y1=\"220\" x2=\"337\" y2=\"270\" stroke=\"black\"/> \r\n                    <line x1=\"375\" y1=\"220\" x2=\"413\" y2=\"270\" stroke=\"black\"/> \r\n\r\n                    <line x1=\"675\" y1=\"220\" x2=\"637\" y2=\"270\" stroke=\"black\"/>\r\n                        <line x1=\"675\" y1=\"220\" x2=\"713\" y2=\"270\" stroke=\"black\"/>\r\n\r\n                    <line x1=\"825\" y1=\"220\" x2=\"787\" y2=\"270\" stroke=\"black\"/>\r\n                    <line x1=\"825\" y1=\"220\" x2=\"863\" y2=\"270\" stroke=\"black\"/>\r\n\r\n                    <line x1=\"975\" y1=\"220\" x2=\"937\" y2=\"270\" stroke=\"black\"/>\r\n                    <line x1=\"975\" y1=\"220\" x2=\"1013\" y2=\"270\" stroke=\"black\"/>\r\n                        \r\n                    <line x1=\"1125\" y1=\"220\" x2=\"1087\" y2=\"270\" stroke=\"black\"/>\r\n                    <line x1=\"1125\" y1=\"220\" x2=\"1163\" y2=\"270\" stroke=\"black\"/>\r\n    \r\n    \r\n                    </>\r\n        )\r\n        \r\n        case 63:\r\n            return (\r\n                <>\r\n                    <line x1=\"600\" y1=\"70\" x2=\"300\" y2=\"120\" stroke=\"black\"/>\r\n                    <line x1=\"600\" y1=\"70\" x2=\"900\" y2=\"120\" stroke=\"black\"/>   \r\n    \r\n                    <line x1=\"300\" y1=\"120\" x2=\"150\" y2=\"170\" stroke=\"black\"/>\r\n                    <line x1=\"300\" y1=\"120\" x2=\"450\" y2=\"170\" stroke=\"black\"/>   \r\n                    <line x1=\"900\" y1=\"120\" x2=\"750\" y2=\"170\" stroke=\"black\"/>\r\n                    <line x1=\"900\" y1=\"120\" x2=\"1050\" y2=\"170\" stroke=\"black\"/> \r\n    \r\n                    <line x1=\"150\" y1=\"170\" x2=\"75\" y2=\"220\" stroke=\"black\"/>\r\n                    <line x1=\"150\" y1=\"170\" x2=\"225\" y2=\"220\" stroke=\"black\"/>   \r\n                    <line x1=\"450\" y1=\"170\" x2=\"525\" y2=\"220\" stroke=\"black\"/>\r\n                    <line x1=\"450\" y1=\"170\" x2=\"375\" y2=\"220\" stroke=\"black\"/> \r\n                        \r\n                    <line x1=\"750\" y1=\"170\" x2=\"675\" y2=\"220\" stroke=\"black\"/>\r\n                    <line x1=\"750\" y1=\"170\" x2=\"825\" y2=\"220\" stroke=\"black\"/>   \r\n                    <line x1=\"1050\" y1=\"170\" x2=\"1125\" y2=\"220\" stroke=\"black\"/>\r\n                    <line x1=\"1050\" y1=\"170\" x2=\"975\" y2=\"220\" stroke=\"black\"/> \r\n\r\n                    <line x1=\"75\" y1=\"220\" x2=\"38\" y2=\"270\" stroke=\"black\"/>\r\n                    <line x1=\"75\" y1=\"220\" x2=\"113\" y2=\"270\" stroke=\"black\"/>\r\n\r\n                    <line x1=\"225\" y1=\"220\" x2=\"187\" y2=\"270\" stroke=\"black\"/>   \r\n                    <line x1=\"225\" y1=\"220\" x2=\"263\" y2=\"270\" stroke=\"black\"/>  \r\n\r\n                    <line x1=\"525\" y1=\"220\" x2=\"487\" y2=\"270\" stroke=\"black\"/> \r\n                    <line x1=\"525\" y1=\"220\" x2=\"563\" y2=\"270\" stroke=\"black\"/> \r\n\r\n                    <line x1=\"375\" y1=\"220\" x2=\"337\" y2=\"270\" stroke=\"black\"/> \r\n                    <line x1=\"375\" y1=\"220\" x2=\"413\" y2=\"270\" stroke=\"black\"/> \r\n\r\n                    <line x1=\"675\" y1=\"220\" x2=\"637\" y2=\"270\" stroke=\"black\"/>\r\n                        <line x1=\"675\" y1=\"220\" x2=\"713\" y2=\"270\" stroke=\"black\"/>\r\n\r\n                    <line x1=\"825\" y1=\"220\" x2=\"787\" y2=\"270\" stroke=\"black\"/>\r\n                    <line x1=\"825\" y1=\"220\" x2=\"863\" y2=\"270\" stroke=\"black\"/>\r\n\r\n                    <line x1=\"975\" y1=\"220\" x2=\"937\" y2=\"270\" stroke=\"black\"/>\r\n                    <line x1=\"975\" y1=\"220\" x2=\"1013\" y2=\"270\" stroke=\"black\"/>\r\n                        \r\n                    <line x1=\"1125\" y1=\"220\" x2=\"1087\" y2=\"270\" stroke=\"black\"/>\r\n                    <line x1=\"1125\" y1=\"220\" x2=\"1163\" y2=\"270\" stroke=\"black\"/>\r\n    \r\n    \r\n                    </>\r\n        )\r\n    \r\n        default:  return (\r\n            <>  \r\n            </>\r\n         )      \r\n    }\r\n}\r\n\r\nexport default Line\r\n","import React from 'react'\r\nimport BinaryNode from '../binary-node/binary-node'\r\nimport Line from '../line/line'\r\nimport './binary-tree.css'\r\n\r\nfunction BinaryTree({nodes, onChangeColor, onDragStart, onDragOver, onDragDrop}) {\r\n        \r\n    const elements = nodes.map((item) => {\r\n        return (\r\n            <div key={item.id}\r\n                onDragStart={ () => onDragStart(item)}\r\n                onDragOver={ (e) => onDragOver(e)}\r\n                onDrop={ (e) =>  onDragDrop(e, item)}\r\n                draggable={true}\r\n            >   \r\n                    <BinaryNode \r\n                        {...item}  \r\n                        onChangeColor={() => onChangeColor(item.id)}\r\n                    />\r\n           </div>       \r\n        )\r\n    });\r\n\r\n    return (\r\n        <div className=\"binary-tree\">\r\n            <svg height=\"400\" width=\"1200\" className=\"svg-container\">\r\n            <Line nodes={nodes.length} nodesArr={nodes}/>\r\n\r\n            </svg>\r\n            {elements}\r\n\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default BinaryTree","import React, { useState } from 'react'\r\nimport './input-panel.css'\r\n\r\nfunction InputPanel({onInput}) {\r\n    const [nodeNumber, setnodeNumber] = useState(0);\r\n    const [text, settext] = useState('');\r\n\r\n    const sendNumber = (e) => {\r\n        e.preventDefault();\r\n        onInput(nodeNumber);\r\n    }\r\n\r\n    const changeValue = (e) => {\r\n        if (!isNaN(e.target.value) && (+e.target.value < 7)) {\r\n             \r\n            setnodeNumber(e.target.value);\r\n            settext(\"\");\r\n        } else {\r\n            settext(\"Введите число меньше 7\");\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={sendNumber}>\r\n                <input \r\n                    className=\"form-input\" \r\n                    type=\"text\" \r\n                    placeholder=\"Введите количество уровней\" \r\n                    onChange={changeValue}\r\n                    value={nodeNumber}\r\n                />\r\n                <button \r\n                    className=\"btn-show\"\r\n                    type=\"submit\"\r\n                >Показать\r\n                </button>\r\n                <span>{text}</span>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputPanel\r\n","import React, { useState } from 'react'\r\nimport BinaryTree from '../binary-tree/binary-tree'\r\nimport InputPanel from '../input-panel/input-panel'\r\nimport { HuePicker } from 'react-color'\r\n\r\nimport './app.css'\r\n\r\nfunction App(props) {\r\n    const [nodesArray, setnodesArray] = useState([]);\r\n    const [currentNode, setCurrentNode] = useState(null);\r\n    const [color, setcolor] = useState(\"#ff0000\");\r\n\r\n    const infoText = [\r\n        `1 - Укажите количество уровней дерева N (При N > 5 линии отключены);`, \r\n        `2 - Выберите цвет и выполните клик по одному из узлов дерева для изменения цвета;`,\r\n        `3 - Вы можете менять узлы дерева местами зажатием ЛКМ.`\r\n    ];\r\n\r\n    const infoTextShow = infoText.map((item, key) => {\r\n        return (\r\n                <p key={key}>{item}</p>\r\n        );\r\n    })\r\n \r\n    function dragStartHandler (node)  {\r\n        setCurrentNode(node);\r\n        console.log('drag', node);\r\n    }\r\n\r\n    function dragOverHandler(e)  {\r\n        e.preventDefault();\r\n    }\r\n\r\n    function dropHandler (e, node)  {\r\n        e.preventDefault();\r\n        console.log('drop', node);\r\n        setnodesArray(nodesArray.map(item => {\r\n            if (item.value === node.value ) {\r\n                return {...item, value:currentNode.value, id:currentNode.id, \r\n                        bgcolor:currentNode.bgcolor}\r\n            }\r\n            if (item.value === currentNode.value) {\r\n                return {...item, value:node.value, id:node.id, \r\n                        bgcolor:node.bgcolor}\r\n            }\r\n            return item;\r\n        }))\r\n        \r\n    }\r\n\r\n    const changeNodeColor = (id) => {\r\n        setnodesArray(() => {\r\n            const index = nodesArray.findIndex(elem => elem.id === id);\r\n            let newArr = [...nodesArray];\r\n            newArr[index].bgcolor = color;\r\n            return newArr;\r\n        })\r\n    }\r\n\r\n    const createNodeTree = (nodes) => {\r\n        setnodesArray(() => {\r\n\r\n            let newArr =    [],\r\n                top =       60, \r\n                left =      585,\r\n                b =         left,\r\n                k =         1,\r\n                rightNode = left,\r\n                value =     0;\r\n            \r\n            for (let i = 0; i < nodes; i++) {\r\n                for (let y = 1; y <= k; y++) {\r\n                    if (y === 1) {\r\n                        newArr.push({value, top, left:rightNode,  bgcolor: '#fff', id: value});\r\n                        b = rightNode;\r\n                    } else { \r\n                        b += left/k*2;\r\n                        newArr.push({value, top, left:b,  bgcolor: '#fff', id: value});\r\n                    }\r\n                    value++;\r\n                }\r\n                rightNode -= left/k/2;\r\n                k*=2;\r\n                top += 50;\r\n            }\r\n             \r\n            return newArr;\r\n        })  \r\n        \r\n    }\r\n\r\n\r\n    return (\r\n            <>\r\n            <div className=\"wrapper\">\r\n                <div className=\"control-panel\">\r\n                    <InputPanel onInput={createNodeTree} />\r\n                    <HuePicker   \r\n                        className=\"color-picker\"\r\n                        color={color}\r\n                        onChange={(updateColor) => setcolor(updateColor.hex)}\r\n                    /> \r\n                </div>\r\n                <div className=\"info-panel\">\r\n                    {infoTextShow}\r\n                </div>\r\n                \r\n\r\n                <BinaryTree \r\n                    nodes={nodesArray}  \r\n                    onChangeColor={changeNodeColor}\r\n                    onDragStart={dragStartHandler}\r\n                    onDragOver={dragOverHandler}\r\n                    onDragDrop={dropHandler}\r\n                />\r\n            </div>\r\n            </>\r\n            \r\n    )  \r\n}\r\n\r\nexport default App\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/app';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}